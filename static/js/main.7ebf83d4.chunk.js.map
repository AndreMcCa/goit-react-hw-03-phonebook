{"version":3,"sources":["components/ContactForm/Input/Input.js","components/ContactForm/ContactForm.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Input","label","type","name","value","onChange","ContactForm","state","number","handleChande","e","nameInput","target","setState","handleSubmit","preventDefault","props","addContact","reset","this","onSubmit","id","Component","Contact","contact","onDelete","onClick","ContactsList","contacts","map","App","filter","renewalLocalStorage","localStorage","setItem","JSON","stringify","uuidv4","normalizedName","toLowerCase","find","alert","prevState","deleteContact","contactDeleteId","filterChange","getFiltrationContacts","normalizedFilter","includes","getItem","parse","prevProps","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ebf83d4.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport default function Input({label, type, name, value, onChange}) {\r\n    return (\r\n    <label> {label}\r\n        <input type={type} name={name} value={value} onChange={onChange}/>\r\n    </label>\r\n    )\r\n}\r\n\r\nInput.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from './Input/Input';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    handleChande = e => {\r\n        const nameInput = e.target.name;\r\n        const value = e.target.value;\r\n    \r\n        this.setState({[nameInput]: value})\r\n      }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const {name, number} = this.state;\r\n    \r\n        if(name !== '' && number !== '') {\r\n            this.props.addContact(name, number);\r\n        }\r\n\r\n        this.reset();\r\n    }\r\n\r\n    reset = () => this.setState({name: '', number: ''})\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n            <form onSubmit={this.handleSubmit} key={this.props.id}>\r\n                <Input label=\"Name\" type=\"text\" name=\"name\" value={name} onChange={this.handleChande}/>\r\n                <Input label=\"Number\" type=\"text\" name=\"number\" value={number} onChange={this.handleChande}/>\r\n\r\n                <button type='submit'>Add</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n}","import PropTypes from 'prop-types';\r\n\r\nexport default function Contact({ contact, onDelete }) {\r\n\r\n        return (\r\n            <li>\r\n                <p>{contact.name} {contact.number}</p> \r\n                <button id={contact.id} onClick={onDelete}>Delete</button>\r\n            </li>          \r\n        )   \r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n}","import PropTypes from 'prop-types';\r\n\r\nimport Contact from \"./Contact/Contact\";\r\n\r\nexport default function ContactsList({contacts, onDelete}) {\r\n\r\n    return (\r\n        <ul>\r\n            {contacts.map(contact => (<Contact key={contact.id} contact={contact} onDelete={onDelete}/>))}\r\n      </ul>\r\n    )\r\n}\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n}","import React, {Component} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from \"./components/ContactForm/Input/Input\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n      contacts: [\r\n        {id: 'id-1', name: 'Rosie', number: '459-12-56'},\r\n        {id: 'id-2', name: 'Hermione', number: '443-89-12'},\r\n        {id: 'id-3', name: 'Eden', number: '645-17-79'},\r\n        {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\r\n      ],\r\n      filter: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n      const contacts = localStorage.getItem('contacts');\r\n\r\n      if(contacts) {\r\n        this.setState(prevState => ({contacts: [...JSON.parse(contacts)]}))\r\n      }\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (this.state.contacts !== prevState.contacts) {\r\n        this.renewalLocalStorage(this.state.contacts)   \r\n      };\r\n    }\r\n\r\n    renewalLocalStorage = (contacts) => {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }\r\n\r\n    addContact = (name, number) => {\r\n        const { contacts } = this.state;\r\n        const id = uuidv4();\r\n        const normalizedName = name.toLowerCase();\r\n        const hasContact = contacts.find(contact => contact.name.toLowerCase() === normalizedName) \r\n\r\n        if(hasContact) {\r\n          alert(`${normalizedName} is already in contacts`)\r\n        } else {\r\n          this.setState((prevState) => ({contacts: [...prevState.contacts, {id: id, name, number}]}))\r\n        }\r\n    };\r\n\r\n    deleteContact = (e) => {\r\n      const contactDeleteId = e.target.id;\r\n\r\n      this.setState((prevState) => ({ contacts: prevState.contacts.filter(contact => contact.id !== contactDeleteId)}))\r\n    }\r\n\r\n    filterChange = (e) => {\r\n        this.setState({filter: e.target.value})\r\n    }\r\n\r\n    getFiltrationContacts = () => {\r\n        const { filter, contacts } = this.state;\r\n    \r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n      }\r\n\r\n    render() {\r\n        const { filter } = this.state;\r\n        const visibleContacts =  this.getFiltrationContacts();\r\n  \r\n      return (\r\n        <>\r\n            <h1>Phonebook</h1>\r\n            <ContactForm addContact={this.addContact} id={uuidv4()}/>\r\n\r\n            <h2>Contacts</h2>\r\n            <Filter label=\"Find contacts by name\" type=\"text\" name=\"filter\" value={filter} onChange={this.filterChange}/>\r\n\r\n            <ContactList contacts={visibleContacts} onDelete={this.deleteContact}/>\r\n        </>\r\n    )\r\n    }\r\n  }\r\n  \r\n  export default App;\r\n  \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}